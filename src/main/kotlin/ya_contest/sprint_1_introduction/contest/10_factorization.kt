package ya_contest.sprint_1_introduction.contest

/***
 * Условие:
 * Основная теорема арифметики говорит: любое число раскладывается на произведение простых множителей единственным образом, с точностью до их перестановки. Например:
 * Число 8 можно представить как 2 × 2 × 2.
 * Число 50 — как 2 × 5 × 5 (или 5 × 5 × 2, или 5 × 2 × 5). Три варианта отличаются лишь порядком следования множителей.
 * Разложение числа на простые множители называется факторизацией числа.
 *
 * Напишите программу, которая производит факторизацию переданного числа.
 *
 * Формат ввода:
 * В единственной строке дано число n (2 ≤ n ≤ 109), которое нужно факторизовать.
 *
 * Формат вывода:
 *
 * Выведите в порядке не убывания простые множители, на которые раскладывается число n.
 *
 * Ограничение:
 * Ограничение времени - 1 секунда
 * Ограничение памяти - 64Mb
 * Ввод	стандартный ввод или input.txt
 * Вывод стандартный вывод или output.txt
 *
 * Пример 1:
 * Ввод
 * 8
 * Вывод
 * 2 2 2
 *
 * Пример 2:
 * Ввод
 * 13
 *
 * Вывод
 * 13
 */

private fun main() {
    println(factorizeNumber(readln().toInt()).joinToString(" "))
}

private fun factorizeNumber(x: Int) : List<Int>{
    var divider = 2
    var value = x
    val result = mutableListOf<Int>()
    while (value != 1) {
        if(value % divider == 0) {
            result.add(divider)
            value /= divider
        } else divider += 1
    }
    return result
}
package ya_contest.sprint_2_basic_data_structures.contest

/**
 * У Тимофея было очень много стажёров, целых N (0 ≤ N ≤ 106) человек.
 * Каждый стажёр хотел быть лучше своих предшественников, поэтому i-й стажёр делал столько коммитов, сколько делали два предыдущих стажёра в сумме.
 * Два первых стажёра были менее инициативными — они сделали по одному коммиту. Пусть F(i) – число коммитов, сделанных i-м стажёром (стажёры нумеруются с нуля).
 * Первые два стажёра сделали по одному коммиту: F(0)=F(1)=1.
 * Для всех i ≥ 2 выполнено F(i)=F(i−1) + F(i−2).
 * Определите, сколько кода напишет следующий стажёр – найдите последние k цифр числа F(n).
 *
 * Как найти k последних цифр?
 * Чтобы вычислить k последних цифр некоторого числа x, достаточно взять остаток от его деления на число 10^k.
 * Эта операция обозначается как x mod 10^k.
 * Узнайте, как записывается операция взятия остатка по модулю в вашем языке программирования.
 * Также обратите внимание на возможное переполнение целочисленных типов, если в вашем языке такое случается.
 *
 * */
fun main() {
    val (n, k) = readLine()!!.split(" ").map { it.toInt() }
    val result = findLastKDigits(n, k)
    println(result)
}

fun findLastKDigits(n: Int, k: Int): Int {
    var divider = 1
    if (n == 0) return 0
    if (n == 1) return 1
    repeat(k) {
        divider *= 10
    }

    var prev = 1
    var curr = 1

    for (i in 2..n) {
        val temp = (prev + curr) % divider
        prev = curr
        curr = temp
    }

    return curr
}